/// <reference types="node" />
import { Uri } from 'coc.nvim';
import { URL, URLSearchParams } from 'url';
export declare class ResourceUri {
    readonly url: URL;
    static parse(urlOrStr: string): ResourceUri | undefined;
    static parse(urlOrStr: URL): ResourceUri;
    readonly params: URLSearchParams;
    readonly isResource: boolean;
    readonly fsPath: string | undefined;
    constructor(url: URL);
    readFile(): Promise<Buffer | "">;
}
/**
 * Construct a uri that can load resources inside a webview
 *
 * We encode the resource component of the uri so that on the main thread
 * we know where to load the resource from (remote or truly local):
 *
 * ```txt
 * ${scheme}://${resource-authority}/resources/resourceId=${resource_id}
 * ```
 *
 * @param resource Uri of the resource to load.
 */
export declare function asWebviewUri(resource: Uri, options: {
    host: string;
    port: number;
}): Uri;
